---
- name: Verify appserver role
  hosts: all
  gather_facts: false

  tasks:
    - name: Check Node.js version
      ansible.builtin.command: node --version
      register: node_version_result
      changed_when: false
      failed_when: "'v18' not in node_version_result.stdout"

    - name: Assert Node.js 18 is installed
      ansible.builtin.assert:
        that:
          - "'v18' in node_version_result.stdout"
        fail_msg: "Node.js {{ node_version }} is NOT installed"
        success_msg: "Node.js {{ node_version }} is installed"

    - name: Check npm availability
      ansible.builtin.command: npm --version
      register: npm_version_result
      changed_when: false
      failed_when: npm_version_result.rc != 0

    - name: Assert npm is installed
      ansible.builtin.assert:
        that:
          - npm_version_result.rc == 0
        fail_msg: "npm is not installed"
        success_msg: "npm is installed"

    - name: Check if app directory exists
      ansible.builtin.stat:
        path: /opt/nodeapp
      register: app_dir_check

    - name: Assert app directory exists
      ansible.builtin.assert:
        that:
          - app_dir_check.stat.exists
          - app_dir_check.stat.isdir
        fail_msg: "/opt/nodeapp directory is missing"
        success_msg: "/opt/nodeapp directory exists"

    - name: Check if git repo is cloned
      ansible.builtin.command: git -C /opt/nodeapp remote get-url origin
      register: repo_url_check
      changed_when: false
      failed_when: repo_url_check.rc != 0

    - name: Assert correct repository is cloned
      ansible.builtin.assert:
        that:
          - "'https://github.com/sawolabs/nodejs-sample-app.git' in repo_url_check.stdout"
        fail_msg: "Repository is not cloned correctly"
        success_msg: "Correct repository is present"

    - name: Check if Node.js app service is running
      ansible.builtin.service_facts:

    - name: Assert app service is active
      ansible.builtin.assert:
        that:
          - "'nodeapp' in services"
          - "services['nodeapp'].state == 'running'"
        fail_msg: "Node.js app service is not running"
        success_msg: "Node.js app service is running"

    - name: Wait for application to be ready
      ansible.builtin.wait_for:
        host: "127.0.0.1"
        port: 3000
        timeout: 30
        state: started

    - name: Check HTTP response from app
      ansible.builtin.uri:
        url: "http://127.0.0.1:3000"
        return_content: yes
      register: http_check

    - name: Assert HTTP server is responding
      ansible.builtin.assert:
        that:
          - http_check.status == 200
        fail_msg: "App server did not return HTTP 200 OK"
        success_msg: "App server is responding with HTTP 200 OK"
